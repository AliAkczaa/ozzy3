import{initializeApp}from 'https://www.gstatic.com/firebasejs/9.6.1/firebase-app.js';import{getFirestore,collection,addDoc,getDocs,orderBy,query,limit,serverTimestamp}from 'https://www.gstatic.com/firebasejs/9.6.1/firebase-firestore.js';import{getAuth,signInAnonymously}from 'https://www.gstatic.com/firebasejs/9.6.1/firebase-auth.js';const firebaseConfig={apiKey:"AIzaSyASSmHw3LVUu7lSql0QwGmmBcFkaNeMups",authDomain:"ozzy-14c19.firebaseapp.com",projectId:"ozzy-14c19",storageBucket:"ozzy-14c19.firebaseapp.com",messagingSenderId:"668337469201",appId:"1:668337469201:web:cd9d84d45c93d9b6e3feb0"};const app=initializeApp(firebaseConfig);const db=getFirestore(app);const auth=getAuth(app);let backgroundTractor;let ozzyContainer;let ozzyImage;let healthBarFill;let gameContainer;let gameInfoContainer;let scoreDisplay;let currentLevelDisplay;let startScreen;let startButton;let nicknameInput;let showLeaderboardButton;let endScreen;let finalScoreDisplay;let restartButton;let showLeaderboardAfterGameButton;let leaderboardScreen;let leaderboardList;let backToStartButton;let superpowerButtonsContainer;let btnLightning;let btnFreeze;let btnFrenzy;let lightningEffect;let freezeEffect;let frenzyEffect;let backgroundMusic;let punchSound;let gameOverSound;let shopButton;let upgradeShopScreen;let closeShopButton;let baseDamageLevelDisplay;let baseDamageCostDisplay;let buyBaseDamageButton;let lightningDamageLevelDisplay;let lightningDamageCostDisplay;let buyLightningDamageButton;let freezeDamageLevelDisplay;let freezeDamageCostDisplay;let buyFreezeDamageButton;let frenzyDamageLevelDisplay;let frenzyDamageCostDisplay;let buyFrenzyDamageButton;let quoteImagesContainer;let gameEffectsCanvas;let gameEffectsCtx;let playerHealthContainer;let playerHealthDisplay;let playerHealthBarBg;let playerHealthBarFill;let selectSkinButton;let skinSelectionScreen;let selectStonksSkinButton;let selectTinuSkinButton;let closeSkinSelectionButton;let playerNickname="Gracz";let score=0;let ozzyHealth=100;let INITIAL_OZZY_HEALTH=100;let PUNCH_DAMAGE=10;let currentUserId=null;let isGameActive=!1;let currentLevel=0;let isBossFight=!1;let punchesSinceLastPowerup=0;const quoteImagePaths=['1.png','2.png','3.png','4.png','5.png','6.png','7.png','8.png','9.png','10.png','11.png','12.png','13.png','14.png','15.png','16.png','17.png','18.png','19.png','20.png','21.png','22.png','23.png','24.png','25.png','26.png','27.png','28.png'];const QUOTE_DISPLAY_DURATION_MS=2000;const PUNCHES_PER_POWERUP=10;const COOLDOWN_DURATION_MS=60*1000;let lastUsedLightningTime=0;let lastUsedFreezeTime=0;let lastUsedFrenzyTime=0;let frenzyModeActive=!1;let frenzyTimerId;const FRENZY_DAMAGE_MULTIPLIER=3;const FRENZY_DURATION_MS=5000;let LIGHTNING_BASE_DAMAGE=150;let ICE_BLAST_INITIAL_DAMAGE=50;let ICE_BLAST_DOT_DAMAGE_PER_SECOND=25;const ICE_BLAST_DOT_DURATION_SECONDS=5;let FRENZY_INITIAL_DAMAGE=30;let superpowerCooldownIntervalId;let freezeModeActive=!1;let freezeDotIntervalId;const SKIN_IMAGES={stonks:{normal:'stonks.png',boss:'stonksboss.png'},tinu:{normal:'tinu.png',boss:'tinuboss.png'}};let currentSkin='stonks';const BOSS_LEVEL_INTERVAL=10;const NORMAL_OZZY_INITIAL_HEALTH=100;const NORMAL_OZZY_HEALTH_INCREMENT=20;const BOSS_INITIAL_HEALTH=300;const BOSS_HEALTH_INCREMENT_PER_ENCOUNTER=100;const BOSS_MOVEMENT_SPEED=2;const BOSS_QUOTES=["CHLOPY OD CRYPTONA FARMIA!","TTB TO GÓWNO! TYLKO STONKS!","DO DUBAJU! ZA KASE INWESTORÓW!","1 LAUNCHPAD, 1 BOT, 1 DEX!","FARMER Z BSC - TOM - PISZE ZE TO JA JESTEM SCAMEREM!"];let bossMovementAnimationFrameId;let bossDx=BOSS_MOVEMENT_SPEED;let bossCurrentTransformX=0;const CLIENT_SIDE_MAX_SCORE=200;let upgradeLevels={baseDamage:1,lightningDamage:1,freezeDamage:1,frenzyDamage:1};const UPGRADE_COST_BASE=10;const UPGRADE_COST_MULTIPLIER=1.5;const DAMAGE_INCREASE_PER_LEVEL=5;const LIGHTNING_DAMAGE_INCREASE_PER_LEVEL=30;const FREEZE_DAMAGE_INITIAL_INCREASE_PER_LEVEL=10;const FREEZE_DAMAGE_DOT_INCREASE_PER_LEVEL=5;const FRENZY_INITIAL_DAMAGE_INCREASE_PER_LEVEL=15;let stonksVisualVariantIndex=0;const totalStonksVariants=10;let bossVisualVariantIndex=0;const totalBossVariants=10;const originalLightningText='Piorun Zagłady';const originalFreezeText='Lodowy Wybuch';const originalFrenzyText='Szał Bojowy';let playerHealth=100;const MAX_PLAYER_HEALTH=100;const STONKS_DAMAGE_INCREMENT_PER_BOSS_CYCLE=3;let baseStonksDamage=5;let STONKS_ATTACK_DAMAGE=baseStonksDamage;const STONKS_ATTACK_INTERVAL_MS=2000;let playerAttackIntervalId;class CanvasParticle{constructor(x,y,vx,vy,color,size,life,type,angle=0,image=null,targetX=null,targetY=null){this.x=x;this.y=y;this.vx=vx;this.vy=vy;this.color=color;this.size=size;this.life=life;this.currentLifeTime=0;this.alpha=1;this.type=type;this.angle=angle;this.startSize=size;this.image=image;this.targetX=targetX;this.targetY=targetY}
update(deltaTime){const baseFps=1000/60;const dtRatio=deltaTime/baseFps;this.x+=this.vx*dtRatio;this.y+=this.vy*dtRatio;this.currentLifeTime+=deltaTime;this.alpha=1-(this.currentLifeTime/this.life);if(this.type==='iceShard'){this.vy-=0.05*dtRatio}else if(this.type==='frenzyPulse'){this.size=this.startSize*(1+0.02*(this.currentLifeTime/this.life));this.alpha-=0.05*dtRatio}else if(this.type==='lightningLine'){}else if(this.type==='scratch'){this.alpha-=0.02*dtRatio;this.vx*=(1-0.02*dtRatio);this.vy*=(1-0.02*dtRatio)}else if(this.type==='stonksClaw'){this.alpha-=0.005*dtRatio;this.size=this.startSize*(1-0.002*(this.currentLifeTime/this.life))}else if(this.type==='painParticle'){this.vy+=0.02*dtRatio;this.alpha-=0.008*dtRatio;this.size=this.startSize*(1-0.001*(this.currentLifeTime/this.life))}else if(this.type==='clawMark'){this.alpha=1-(this.currentLifeTime/this.life)}else if(this.type==='frenzyFlame'){this.vy+=0.05*dtRatio;this.vx*=(1-0.01*dtRatio);this.size=this.startSize*(1-(this.currentLifeTime/this.life)*0.5)}else if(this.type==='bossFire'){this.vy-=0.1*dtRatio;this.vx*=(1-0.03*dtRatio);this.size=this.startSize*(0.8+0.5*(this.currentLifeTime/this.life));this.alpha=1-Math.pow(this.currentLifeTime/this.life,2)}else if(this.type==='bossIce'){this.vy+=0.02*dtRatio;this.vx*=(1-0.01*dtRatio);this.angle+=0.1*dtRatio;this.size=this.startSize*(1-(this.currentLifeTime/this.life)*0.7)}else if(this.type==='bossElectricity'){}}
draw(ctx){ctx.save();ctx.globalAlpha=Math.max(0,this.alpha);if(this.type.startsWith('boss')||this.type==='lightningSpark'){ctx.fillStyle=this.color;ctx.beginPath();if(this.type==='bossElectricity'){ctx.translate(this.x,this.y);ctx.rotate(this.angle);ctx.fillRect(-this.size/2,-this.size/2,this.size,this.size/4)}else if(this.type==='lightningSpark'){ctx.arc(this.x,this.y,this.size,0,Math.PI*2);ctx.fill()}else if(this.type==='bossFire'){ctx.translate(this.x,this.y);ctx.rotate(this.angle);ctx.moveTo(0,-this.size);ctx.quadraticCurveTo(this.size/2,-this.size/2,this.size/2,this.size/2);ctx.quadraticCurveTo(0,this.size/4,-this.size/2,this.size/2);ctx.quadraticCurveTo(-this.size/2,-this.size/2,0,-this.size);ctx.fill()}else if(this.type==='bossIce'){ctx.translate(this.x,this.y);ctx.rotate(this.angle);ctx.moveTo(0,-this.size);ctx.lineTo(this.size/2,this.size/2);ctx.lineTo(-this.size/2,this.size/2);ctx.closePath();ctx.fill()}}else if(this.type==='lightningLine'){ctx.strokeStyle=this.color;ctx.lineWidth=this.size;ctx.lineCap='round';ctx.beginPath();ctx.moveTo(this.x,this.y);ctx.lineTo(this.targetX,this.targetY);ctx.stroke()}else if(this.type==='iceShard'){ctx.fillStyle=this.color;ctx.beginPath();ctx.translate(this.x,this.y);ctx.rotate(this.angle*Math.PI/180);ctx.moveTo(0,-this.size);ctx.lineTo(this.size/2,this.size/2);ctx.lineTo(-this.size/2,this.size/2);ctx.closePath();ctx.fill()}else if(this.type==='frenzyPulse'){ctx.strokeStyle=this.color;ctx.lineWidth=2;ctx.beginPath();ctx.arc(this.x,this.y,this.size/2,0,Math.PI*2);ctx.stroke()}else if(this.type==='frenzyFlame'){ctx.fillStyle=this.color;ctx.beginPath();ctx.arc(this.x,this.y,this.size,0,Math.PI*2);ctx.fill()}else if(this.type==='scratch'){ctx.strokeStyle=this.color;ctx.lineWidth=this.size;ctx.lineCap='round';ctx.beginPath();ctx.moveTo(this.x,this.y);ctx.lineTo(this.x+Math.cos(this.angle)*this.size*8,this.y+Math.sin(this.angle)*this.size*8);ctx.stroke()}else if(this.type==='stonksClaw'){ctx.strokeStyle=this.color;ctx.lineWidth=this.size*0.4;ctx.translate(this.x,this.y);ctx.rotate(this.angle);ctx.beginPath();ctx.moveTo(-this.size*2,0);ctx.lineTo(-this.size*1.5+Math.random()*this.size*0.5,-this.size*0.3);ctx.lineTo(-this.size*1+Math.random()*this.size*0.5,this.size*0.1);ctx.lineTo(-this.size*0.5+Math.random()*this.size*0.5,-this.size*0.2);ctx.lineTo(0+Math.random()*this.size*0.5,this.size*0.3);ctx.lineTo(this.size*0.5+Math.random()*this.size*0.5,-this.size*0.1);ctx.lineTo(this.size*1+Math.random()*this.size*0.5,this.size*0.2);ctx.lineTo(this.size*1.5+Math.random()*this.size*0.5,-this.size*0.3);ctx.lineTo(this.size*2,0);ctx.stroke();ctx.globalAlpha=Math.max(0,this.alpha*0.3);ctx.lineWidth=this.size*0.2;ctx.strokeStyle='rgba(0, 0, 0, 0.5)';ctx.stroke();ctx.globalAlpha=Math.max(0,this.alpha)}else if(this.type==='painParticle'){ctx.fillStyle=this.color;ctx.beginPath();ctx.translate(this.x,this.y);ctx.rotate(this.angle);ctx.moveTo(0,-this.size*0.8);ctx.lineTo(this.size*(0.8+Math.random()*0.2),this.size*(0.5+Math.random()*0.2));ctx.lineTo(-this.size*(0.8+Math.random()*0.2),this.size*(0.5+Math.random()*0.2));ctx.closePath();ctx.fill()}else if(this.type==='clawMark'&&this.image){ctx.translate(this.x,this.y);ctx.rotate(this.angle);ctx.drawImage(this.image,-this.size/2,-this.size/2,this.size,this.size*(this.image.naturalHeight/this.image.naturalWidth))}
ctx.restore()}
isDead(){return this.currentLifeTime>=this.life||this.alpha<=0}}
let bossCanvasParticles=[];let lightningCanvasParticles=[];let freezeCanvasParticles=[];let frenzyCanvasParticles=[];let scratchCanvasParticles=[];let stonksAttackClawParticles=[];let stonksAttackPainParticles=[];let clawMarks=[];let clawImage=new Image();const MAX_CANVAS_PARTICLES=200;let lightningModeActive=!1;let gameCanvasAnimationFrameId;let lastFrameTime=0;function animateGameCanvasEffects(currentTime){if(!lastFrameTime)lastFrameTime=currentTime;const deltaTime=currentTime-lastFrameTime;lastFrameTime=currentTime;gameEffectsCanvas.width=gameContainer.offsetWidth;gameEffectsCanvas.height=gameContainer.offsetHeight;gameEffectsCtx.clearRect(0,0,gameEffectsCanvas.width,gameEffectsCtx.height);const ozzyRect=ozzyContainer.getBoundingClientRect();const gameRect=gameContainer.getBoundingClientRect();const ozzyCanvasX=ozzyRect.left-gameRect.left+ozzyRect.width/2;const ozzyCanvasY=ozzyRect.top-gameRect.top+ozzyRect.height/2;const spawnAreaMultiplier=isBossFight?1.5:1.2;const baseParticleSpeed=5;if(isBossFight){gameEffectsCanvas.classList.remove('hidden');gameEffectsCanvas.classList.add('active');if(bossCanvasParticles.length<MAX_CANVAS_PARTICLES&&Math.random()<0.6){let color,type,size,life,vx,vy;const spawnRadius=Math.min(ozzyRect.width,ozzyRect.height)*0.8;const angle=Math.random()*Math.PI*2;const spawnDistance=Math.random()*spawnRadius;const startX=ozzyCanvasX+Math.cos(angle)*spawnDistance;const startY=ozzyCanvasY+Math.sin(angle)*spawnDistance;if(bossVisualVariantIndex===0){color=`rgba(255, ${Math.floor(Math.random() * 100)}, 0, ${0.7 + Math.random() * 0.3})`;type='bossFire';size=Math.random()*15+10;life=1000+Math.random()*500;vx=(Math.random()-0.5)*(baseParticleSpeed*0.3);vy=-(Math.random()*baseParticleSpeed*0.5)-0.5}else if(bossVisualVariantIndex===1){color=`rgba(${Math.floor(Math.random() * 50) + 100}, ${Math.floor(Math.random() * 50) + 200}, 255, ${0.7 + Math.random() * 0.3})`;type='bossIce';size=Math.random()*10+5;life=800+Math.random()*400;vx=(Math.random()-0.5)*(baseParticleSpeed*0.8);vy=(Math.random()-0.5)*(baseParticleSpeed*0.8)}else{color=`rgba(${Math.floor(Math.random() * 50) + 200}, 0, ${Math.floor(Math.random() * 50) + 200}, ${0.8 + Math.random() * 0.2})`;type='bossElectricity';size=Math.random()*20+10;life=200+Math.random()*100;vx=0;vy=0}
bossCanvasParticles.push(new CanvasParticle(startX,startY,vx,vy,color,size,life,type,Math.random()*Math.PI*2))}}
for(let i=bossCanvasParticles.length-1;i>=0;i--){bossCanvasParticles[i].update(deltaTime);if(bossCanvasParticles[i].isDead()){bossCanvasParticles.splice(i,1)}else{bossCanvasParticles[i].draw(gameEffectsCtx)}}
if(lightningModeActive){gameEffectsCanvas.classList.remove('hidden');gameEffectsCanvas.classList.add('active');lightningEffect.classList.remove('hidden');lightningEffect.classList.add('flash-active');const lightningSpawnChance=0.2;if(lightningCanvasParticles.length<MAX_CANVAS_PARTICLES&&Math.random()<lightningSpawnChance){const boltLength=Math.random()*100+100;const boltWidth=Math.random()*5+5;const boltLife=800+Math.random()*700;const startX=Math.random()*gameEffectsCanvas.width;const startY=Math.random()*gameEffectsCanvas.height*0.3;const angle=Math.PI/2+(Math.random()-0.5)*(Math.PI/4);let currentBoltX=startX;let currentBoltY=startY;for(let i=0;i<3;i++){const nextX=currentBoltX+Math.cos(angle+(Math.random()-0.5)*0.3)*(boltLength/3+Math.random()*20);const nextY=currentBoltY+Math.sin(angle+(Math.random()-0.5)*0.3)*(boltLength/3+Math.random()*20);lightningCanvasParticles.push(new CanvasParticle(currentBoltX,currentBoltY,0,0,`rgba(255, 255, ${Math.floor(Math.random() * 100) + 180}, ${0.8 + Math.random() * 0.2})`,boltWidth,boltLife,'lightningLine',0,nextX,nextY));currentBoltX=nextX;currentBoltY=nextY;if(Math.random()<0.5){const branchLength=boltLength*(0.3+Math.random()*0.3);const branchAngle=angle+(Math.random()<0.5?1:-1)*(Math.PI/4+Math.random()*(Math.PI/8));const branchX=currentBoltX+Math.cos(branchAngle)*branchLength;const branchY=currentBoltY+Math.sin(branchAngle)*branchLength;lightningCanvasParticles.push(new CanvasParticle(currentBoltX,currentBoltY,0,0,`rgba(255, 255, ${Math.floor(Math.random() * 100) + 180}, ${0.6 + Math.random() * 0.2})`,boltWidth*0.6,boltLife*0.8,'lightningLine',0,branchX,branchY))}}
for(let j=0;j<Math.random()*5+3;j++){lightningCanvasParticles.push(new CanvasParticle(currentBoltX+(Math.random()-0.5)*20,currentBoltY+(Math.random()-0.5)*20,(Math.random()-0.5)*(baseParticleSpeed*0.5),(Math.random()-0.5)*(baseParticleSpeed*0.5),`rgba(255, 255, 255, ${0.7 + Math.random() * 0.3})`,Math.random()*6+2,600,'lightningSpark'))}}}else if(!lightningModeActive&&lightningEffect.classList.contains('flash-active')){lightningEffect.classList.remove('flash-active');lightningEffect.classList.add('hidden')}
for(let i=lightningCanvasParticles.length-1;i>=0;i--){lightningCanvasParticles[i].update(deltaTime);if(lightningCanvasParticles[i].isDead()){lightningCanvasParticles.splice(i,1)}else{lightningCanvasParticles[i].draw(gameEffectsCtx)}}
if(freezeModeActive){gameEffectsCanvas.classList.remove('hidden');gameEffectsCanvas.classList.add('active');if(freezeCanvasParticles.length<MAX_CANVAS_PARTICLES/2&&Math.random()<0.3){freezeCanvasParticles.push(new CanvasParticle(ozzyCanvasX+(Math.random()-0.5)*ozzyRect.width*1.5,ozzyCanvasY+(Math.random()-0.5)*ozzyRect.height*1.5,(Math.random()-0.5)*(baseParticleSpeed*0.25),(Math.random()-0.5)*(baseParticleSpeed*0.25),`rgba(173, 216, 230, ${0.7 + Math.random() * 0.3})`,Math.random()*15+8,1200,'iceShard',Math.random()*360))}}
for(let i=freezeCanvasParticles.length-1;i>=0;i--){freezeCanvasParticles[i].update(deltaTime);if(freezeCanvasParticles[i].isDead()){freezeCanvasParticles.splice(i,1)}else{freezeCanvasParticles[i].draw(gameEffectsCtx)}}
if(frenzyModeActive){gameEffectsCanvas.classList.remove('hidden');gameEffectsCanvas.classList.add('active');if(frenzyCanvasParticles.length<MAX_CANVAS_PARTICLES&&Math.random()<0.8){const initialParticleX=ozzyCanvasX+(Math.random()-0.5)*ozzyRect.width*0.8;const initialParticleY=ozzyCanvasY+(Math.random()-0.5)*ozzyRect.height*0.8;const speed=(Math.random()*3+2);const angle=Math.random()*Math.PI*2;const vx=Math.cos(angle)*speed;const vy=Math.sin(angle)*speed;frenzyCanvasParticles.push(new CanvasParticle(initialParticleX,initialParticleY,vx,vy,`rgba(255, ${Math.floor(Math.random() * 80)}, 0, ${0.9 + Math.random() * 0.1})`,Math.random()*8+4,500+Math.random()*300,'frenzyFlame'))}}
for(let i=frenzyCanvasParticles.length-1;i>=0;i--){frenzyCanvasParticles[i].update(deltaTime);if(frenzyCanvasParticles[i].isDead()){frenzyCanvasParticles.splice(i,1)}else{frenzyCanvasParticles[i].draw(gameEffectsCtx)}}
for(let i=scratchCanvasParticles.length-1;i>=0;i--){scratchCanvasParticles[i].update(deltaTime);if(scratchCanvasParticles[i].isDead()){scratchCanvasParticles.splice(i,1)}else{scratchCanvasParticles[i].draw(gameEffectsCtx)}}
for(let i=stonksAttackClawParticles.length-1;i>=0;i--){stonksAttackClawParticles[i].update(deltaTime);if(stonksAttackClawParticles[i].isDead()){stonksAttackClawParticles.splice(i,1)}else{stonksAttackClawParticles[i].draw(gameEffectsCtx)}}
for(let i=stonksAttackPainParticles.length-1;i>=0;i--){stonksAttackPainParticles[i].update(deltaTime);if(stonksAttackPainParticles[i].isDead()){stonksAttackPainParticles.splice(i,1)}else{stonksAttackPainParticles[i].draw(gameEffectsCtx)}}
for(let i=clawMarks.length-1;i>=0;i--){clawMarks[i].update(deltaTime);if(clawMarks[i].isDead()){clawMarks.splice(i,1)}else{clawMarks[i].draw(gameEffectsCtx)}}
const anyParticlesActive=bossCanvasParticles.length>0||lightningCanvasParticles.length>0||freezeCanvasParticles.length>0||frenzyCanvasParticles.length>0||scratchCanvasParticles.length>0||stonksAttackClawParticles.length>0||stonksAttackPainParticles.length>0||clawMarks.length>0;if(isGameActive||anyParticlesActive){gameCanvasAnimationFrameId=requestAnimationFrame(animateGameCanvasEffects)}else{gameEffectsCanvas.classList.add('hidden');gameEffectsCanvas.classList.remove('active');gameEffectsCtx.clearRect(0,0,gameEffectsCanvas.width,gameEffectsCtx.height);cancelAnimationFrame(gameCanvasAnimationFrameId)}}
function drawScratchEffect(x,y,count,color,baseSize){for(let i=0;i<count;i++){const offsetX=(Math.random()-0.5)*50;const offsetY=(Math.random()-0.5)*50;const angle=Math.random()*Math.PI*2;const size=baseSize+(Math.random()*baseSize/2);const life=1000;scratchCanvasParticles.push(new CanvasParticle(x+offsetX,y+offsetY,0,0,color,size,life,'scratch',angle))}}
function spawnStonksAttackEffects(ozzyX,ozzyY){const gameContainerRect=gameContainer.getBoundingClientRect();const gameContainerWidth=gameContainerRect.width;const gameContainerHeight=gameContainerRect.height;const spawnAreaX=gameContainerWidth*0.8;const spawnAreaY=gameContainerHeight*0.8;const attackHitX=(gameContainerWidth/2)+(Math.random()-0.5)*spawnAreaX;const attackHitY=(gameContainerHeight/2)+(Math.random()-0.5)*spawnAreaY;const numClawImages=1;const clawImageSize=Math.min(gameContainerWidth*0.3,gameContainerHeight*0.3,200);const clawLife=1000;for(let s=0;s<numClawImages;s++){const angle=Math.random()*Math.PI*2;clawMarks.push(new CanvasParticle(attackHitX,attackHitY,0,0,null,clawImageSize,clawLife,'clawMark',angle,clawImage))}
const numPainParticles=Math.floor(Math.random()*15)+15;const painParticleLife=1200;const painParticleSize=Math.random()*8+8;const painParticleBaseSpeed=1.2;const painSpawnRadius=clawImageSize*0.5;for(let i=0;i<numPainParticles;i++){const angle=Math.random()*Math.PI*2;const distance=Math.random()*painSpawnRadius;const startX=attackHitX+Math.cos(angle)*distance;const startY=attackHitY+Math.sin(angle)*distance;const vx=(Math.random()-0.5)*painParticleBaseSpeed*2;const vy=(Math.random()-0.5)*painParticleBaseSpeed*2-0.5;const color=`rgba(255, ${Math.floor(Math.random() * 100)}, 0, ${0.7 + Math.random() * 0.3})`;stonksAttackPainParticles.push(new CanvasParticle(startX,startY,vx,vy,color,painParticleSize,painParticleLife,'painParticle',angle))}}
async function saveScoreToLeaderboard(nickname,score){console.log("saveScoreToLeaderboard called with nickname:",nickname,"score:",score);const CLIENT_SIDE_MAX_SCORE=200;if(score>CLIENT_SIDE_MAX_SCORE){showMessage("Spierdalaj frajerze cheaterze! Wynik nierealny!",3000);console.warn(`Attempt to save unrealistic score (${score}) by ${nickname}. Blocked client-side.`);setTimeout(resetGame,3000);return}
if(score>0&&currentUserId){try{await addDoc(collection(db,"leaderboard"),{nickname:nickname,score:score,timestamp:serverTimestamp(),userId:currentUserId});showMessage("Wynik zapisany pomyślnie!",2000);console.log(`Wynik (${score}) przesłany przez ${nickname} (${currentUserId}) i zapisany.`)}catch(error){console.error("Error saving score directly to Firestore:",error);showMessage(`Błąd zapisu wyniku: ${error.message}`,3000)}}else if(!currentUserId){console.warn("Cannot save score: User is not authenticated.");showMessage("Błąd: Brak uwierzytelnień do zapisu wyniku. Spróbuj odświeżyć.",3000)}}
async function fetchAndDisplayLeaderboard(){console.log("fetchAndDisplayLeaderboard called.");leaderboardList.innerHTML='';try{const q=query(collection(db,"leaderboard"),orderBy("score","desc"),orderBy("timestamp","asc"),limit(10));const snapshot=await getDocs(q);if(snapshot.empty){leaderboardList.innerHTML='<li>Brak wyników w rankingu. Bądź pierwszy!</li>';return}
snapshot.forEach(doc=>{const data=doc.data();const li=document.createElement('li');li.textContent=`${data.nickname || 'Anonim'}: ${data.score} znokautowań`;leaderboardList.appendChild(li)})}catch(e){console.error("Error fetching leaderboard: ",e);leaderboardList.innerHTML='<li>Wystąpił błąd podczas ładowania rankingu.</li>'}}
function spawnRandomQuote(){const randomImagePath=quoteImagePaths[Math.floor(Math.random()*quoteImagePaths.length)];const img=document.createElement('img');img.src=randomImagePath;img.classList.add('quote-image');const gameContainerRect=gameContainer.getBoundingClientRect();const imgSize=Math.min(gameContainerRect.width*0.15,gameContainerRect.height*0.15,150);const randomX=Math.random()*(gameContainerRect.width-imgSize);const randomY=Math.random()*(gameContainerRect.height-imgSize);img.style.left=`${randomX}px`;img.style.top=`${randomY}px`;const randomRotation=Math.random()*90-45;img.style.transform=`rotate(${randomRotation}deg)`;quoteImagesContainer.appendChild(img);setTimeout(()=>{img.classList.add('active')},10);setTimeout(()=>{img.classList.remove('active');setTimeout(()=>{img.remove()},500)},QUOTE_DISPLAY_DURATION_MS)}
function applyDamageToOzzy(damageAmount){ozzyHealth-=damageAmount;ozzyHealth=Math.max(0,ozzyHealth);updateHealthBar();if(ozzyHealth<=0){handleOzzyKnockout()}}
function stonksAttack(){if(!isGameActive){clearInterval(playerAttackIntervalId);return}
ozzyImage.classList.add('attacking');ozzyImage.classList.add('stonks-attack-effect');setTimeout(()=>{ozzyImage.classList.remove('stonks-attack-effect')},200);setTimeout(()=>{ozzyImage.classList.remove('attacking')},800);gameContainer.classList.add('screen-shake');setTimeout(()=>{gameContainer.classList.remove('screen-shake')},400);playerHealth-=STONKS_ATTACK_DAMAGE;playerHealth=Math.max(0,playerHealth);updatePlayerHealthUI();const ozzyRect=ozzyContainer.getBoundingClientRect();const gameRect=gameContainer.getBoundingClientRect();const ozzyCanvasX=ozzyRect.left-gameRect.left+ozzyRect.width/2;const ozzyCanvasY=ozzyRect.top-gameRect.top+ozzyRect.height/2;spawnStonksAttackEffects(ozzyCanvasX,ozzyCanvasY);if(playerHealth<=0){endGame("ZGINĄŁEŚ W WALCE ZE STONKSEM!")}}
function updatePlayerHealthUI(){playerHealthDisplay.textContent=`${playerHealth}/${MAX_PLAYER_HEALTH}`;const healthPercentage=(playerHealth/MAX_PLAYER_HEALTH)*100;playerHealthBarFill.style.width=`${healthPercentage}%`;if(healthPercentage>60){playerHealthBarFill.style.backgroundColor='#00BFFF'}else if(healthPercentage>30){playerHealthBarFill.style.backgroundColor='#FFD700'}else{playerHealthBarFill.style.backgroundColor='#FF0000'}}
function updateSuperpowerButtons(){const now=Date.now();const canUseLightning=(punchesSinceLastPowerup>=PUNCHES_PER_POWERUP)&&((now-lastUsedLightningTime>=COOLDOWN_DURATION_MS)||lastUsedLightningTime===0)&&isGameActive;const canUseFreeze=(punchesSinceLastPowerup>=PUNCHES_PER_POWERUP)&&((now-lastUsedFreezeTime>=COOLDOWN_DURATION_MS)||lastUsedFreezeTime===0)&&isGameActive;const canUseFrenzy=(punchesSinceLastPowerup>=PUNCHES_PER_POWERUP)&&((now-lastUsedFrenzyTime>=COOLDOWN_DURATION_MS)||lastUsedFrenzyTime===0)&&isGameActive;btnLightning.disabled=!canUseLightning;btnFreeze.disabled=!canUseFreeze;btnFrenzy.disabled=!canUseFrenzy;if(canUseLightning||canUseFreeze||canUseFrenzy){superpowerButtonsContainer.style.pointerEvents='auto'}else{superpowerButtonsContainer.style.pointerEvents='none'}
updateSuperpowerCooldownDisplays()}
function updateSuperpowerCooldownDisplays(){const now=Date.now();const updateButtonText=(button,lastUsedTime,originalText)=>{const superpowerTextSpan=button.querySelector('.superpower-text');const targetElement=superpowerTextSpan||button;if(!isGameActive&&button.classList.contains('hidden')){targetElement.textContent=` ${originalText}`;return}
if(!isGameActive){targetElement.textContent=` ${originalText}`;return}
const timeLeft=Math.ceil((lastUsedTime+COOLDOWN_DURATION_MS-now)/1000);if(timeLeft>0){targetElement.textContent=` ${timeLeft}s`}else{targetElement.textContent=` ${originalText}`}};updateButtonText(btnLightning,lastUsedLightningTime,originalLightningText);updateButtonText(btnFreeze,lastUsedFreezeTime,originalFreezeText);updateButtonText(btnFrenzy,lastUsedFrenzyTime,originalFrenzyText)}
function activateLightningStrike(){if(!isGameActive||btnLightning.disabled)return;showMessage("PIORUN ZAGŁADY!",1500);punchesSinceLastPowerup=0;lastUsedLightningTime=Date.now();updateSuperpowerButtons();const actualLightningDamage=LIGHTNING_BASE_DAMAGE+(upgradeLevels.lightningDamage-1)*LIGHTNING_DAMAGE_INCREASE_PER_LEVEL;applyDamageToOzzy(actualLightningDamage);lightningModeActive=!0;lightningCanvasParticles=[];setTimeout(()=>{lightningModeActive=!1},2500);lightningEffect.classList.remove('hidden');lightningEffect.classList.add('flash-active');setTimeout(()=>{lightningEffect.classList.remove('flash-active');lightningEffect.classList.add('hidden')},1500)}
function activateIceBlast(){if(!isGameActive||btnFreeze.disabled)return;showMessage("LODOWY WYBUCH!",1500);punchesSinceLastPowerup=0;lastUsedFreezeTime=Date.now();updateSuperpowerButtons();const actualIceBlastInitialDamage=ICE_BLAST_INITIAL_DAMAGE+(upgradeLevels.freezeDamage-1)*FREEZE_DAMAGE_INITIAL_INCREASE_PER_LEVEL;const actualIceBlastDotDamage=ICE_BLAST_DOT_DAMAGE_PER_SECOND+(upgradeLevels.freezeDamage-1)*FREEZE_DAMAGE_DOT_INCREASE_PER_LEVEL;freezeEffect.classList.remove('hidden');freezeEffect.classList.add('active');applyDamageToOzzy(actualIceBlastInitialDamage);freezeModeActive=!0;let dotTicks=0;const maxDotTicks=ICE_BLAST_DOT_DURATION_SECONDS;clearInterval(freezeDotIntervalId);freezeDotIntervalId=setInterval(()=>{if(!isGameActive&&!upgradeShopScreen.classList.contains('hidden')){clearInterval(freezeDotIntervalId);return}
if(!isGameActive){clearInterval(freezeDotIntervalId);freezeModeActive=!1;freezeEffect.classList.remove('active');freezeCanvasParticles=[];return}
applyDamageToOzzy(actualIceBlastDotDamage);dotTicks++;if(dotTicks>=maxDotTicks){clearInterval(freezeDotIntervalId);freezeModeActive=!1;freezeEffect.classList.remove('active');freezeCanvasParticles=[];showMessage("Lodowy Wybuch osłabł.",1000)}},1000)}
function activateFrenzy(){if(!isGameActive||btnFrenzy.disabled)return;showMessage("SZAŁ BOJOWY!",1500);punchesSinceLastPowerup=0;lastUsedFrenzyTime=Date.now();updateSuperpowerButtons();const actualFrenzyInitialDamage=FRENZY_INITIAL_DAMAGE+(upgradeLevels.frenzyDamage-1)*FRENZY_INITIAL_DAMAGE_INCREASE_PER_LEVEL;applyDamageToOzzy(actualFrenzyInitialDamage);frenzyModeActive=!0;PUNCH_DAMAGE*=FRENZY_DAMAGE_MULTIPLIER;frenzyEffect.classList.remove('hidden');frenzyEffect.classList.add('active');clearTimeout(frenzyTimerId);frenzyTimerId=setTimeout(()=>{frenzyModeActive=!1;PUNCH_DAMAGE=10+(upgradeLevels.baseDamage-1)*DAMAGE_INCREASE_PER_LEVEL;frenzyEffect.classList.add('hidden');frenzyEffect.classList.remove('active');frenzyCanvasParticles=[];showMessage("Szał minął. Normalne uderzenia.",1500)},FRENZY_DURATION_MS)}
let isBossMovementPaused=!1;function animateBossMovement(){if(!isGameActive||!isBossFight||isBossMovementPaused){cancelAnimationFrame(bossMovementAnimationFrameId);return}
const gameContainerRect=gameContainer.getBoundingClientRect();const ozzyRect=ozzyContainer.getBoundingClientRect();const maxOffset=(gameContainerRect.width-ozzyRect.width)/2;let nextTransformX=bossCurrentTransformX+bossDx;if(nextTransformX>maxOffset){nextTransformX=maxOffset;bossDx*=-1;ozzyImage.classList.add('flipped-x')}else if(nextTransformX<-maxOffset){nextTransformX=-maxOffset;bossDx*=-1;ozzyImage.classList.remove('flipped-x')}
ozzyContainer.style.transform=`translate(calc(-50% + ${nextTransformX}px), -50%)`;bossCurrentTransformX=nextTransformX;bossMovementAnimationFrameId=requestAnimationFrame(animateBossMovement)}
function updateOzzyAppearance(){for(let i=0;i<totalStonksVariants;i++){ozzyImage.classList.remove(`stonks-variant-${i}`)}
for(let i=0;i<totalBossVariants;i++){ozzyImage.classList.remove(`boss-mode-variant-${i}`)}
if(!isBossFight){ozzyImage.classList.add(`stonks-variant-${stonksVisualVariantIndex}`)}else{ozzyImage.classList.add('boss-mode');ozzyImage.classList.add(`boss-mode-variant-${bossVisualVariantIndex}`)}}
function resetGame(){console.log("resetGame called.");score=0;scoreDisplay.textContent=score;currentLevel=0;currentLevelDisplay.textContent=currentLevel;isBossFight=!1;ozzyImage.src=SKIN_IMAGES[currentSkin].normal;ozzyImage.classList.remove('boss-mode');ozzyImage.classList.remove('flipped-x');ozzyImage.classList.remove('attacking');ozzyImage.classList.remove('stonks-attack-effect');gameContainer.classList.remove('screen-shake');stonksVisualVariantIndex=0;bossVisualVariantIndex=0;updateOzzyAppearance();INITIAL_OZZY_HEALTH=NORMAL_OZZY_INITIAL_HEALTH;PUNCH_DAMAGE=10+(upgradeLevels.baseDamage-1)*DAMAGE_INCREASE_PER_LEVEL;ozzyHealth=INITIAL_OZZY_HEALTH;updateHealthBar();ozzyImage.classList.remove('hit-effect');ozzyImage.classList.remove('spawn-ozzy');ozzyContainer.classList.add('hidden');bossCurrentTransformX=0;ozzyContainer.style.transform=`translate(-50%, -50%)`;cancelAnimationFrame(bossMovementAnimationFrameId);isBossMovementPaused=!1;quoteImagesContainer.innerHTML='';punchesSinceLastPowerup=0;lastUsedLightningTime=0;lastUsedFreezeTime=0;lastUsedFrenzyTime=0;frenzyModeActive=!1;clearTimeout(frenzyTimerId);freezeModeActive=!1;clearInterval(freezeDotIntervalId);freezeEffect.classList.add('hidden');freezeEffect.classList.remove('active');frenzyEffect.classList.add('hidden');frenzyEffect.classList.remove('active');lightningEffect.classList.add('hidden');lightningEffect.classList.remove('flash-active');cancelAnimationFrame(gameCanvasAnimationFrameId);gameEffectsCanvas.classList.add('hidden');gameEffectsCanvas.classList.remove('active');bossCanvasParticles=[];lightningCanvasParticles=[];freezeCanvasParticles=[];frenzyCanvasParticles=[];scratchCanvasParticles=[];stonksAttackClawParticles=[];stonksAttackPainParticles=[];clawMarks=[];if(gameEffectsCtx){gameEffectsCtx.clearRect(0,0,gameEffectsCanvas.width,gameEffectsCtx.height)}
document.querySelectorAll('.knockout-message').forEach(el=>el.remove());document.querySelectorAll('.boss-message').forEach(el=>el.remove());playerHealth=MAX_PLAYER_HEALTH;updatePlayerHealthUI();playerHealthContainer.classList.add('hidden');clearInterval(playerAttackIntervalId);isGameActive=!1;endScreen.classList.add('hidden');leaderboardScreen.classList.add('hidden');upgradeShopScreen.classList.add('hidden');startScreen.classList.remove('hidden');shopButton.classList.remove('hidden');superpowerButtonsContainer.classList.add('hidden');gameInfoContainer.classList.add('hidden');clearInterval(superpowerCooldownIntervalId);updateSuperpowerCooldownDisplays();if(backgroundMusic){backgroundMusic.pause();backgroundMusic.currentTime=0}
if(gameOverSound){gameOverSound.pause();gameOverSound.currentTime=0}
baseStonksDamage=5;STONKS_ATTACK_DAMAGE=baseStonksDamage}
function showMessage(message,duration=1500){const dynamicMessageElement=document.createElement('div');dynamicMessageElement.classList.add('knockout-message');dynamicMessageElement.textContent=message;gameContainer.appendChild(dynamicMessageElement);setTimeout(()=>{dynamicMessageElement.remove()},duration)}
function showBossMessage(message,duration=2500){const dynamicMessageElement=document.createElement('div');dynamicMessageElement.classList.add('boss-message');dynamicMessageElement.textContent=message;gameContainer.appendChild(dynamicMessageElement);setTimeout(()=>{dynamicMessageElement.remove()},duration)}
function updateHealthBar(){const healthPercentage=(ozzyHealth/INITIAL_OZZY_HEALTH)*100;healthBarFill.style.width=`${healthPercentage}%`;if(healthPercentage>50){healthBarFill.style.backgroundColor='limegreen'}else if(healthPercentage>20){healthBarFill.style.backgroundColor='orange'}else{healthBarFill.style.backgroundColor='red'}}
function startGame(){console.log("startGame called.");const nickname=nicknameInput.value.trim();if(!nickname){showMessage("Musisz wpisać swój nick!",2000);return}
playerNickname=nickname;resetGame();isGameActive=!0;startScreen.classList.add('hidden');ozzyContainer.classList.remove('hidden');gameInfoContainer.classList.remove('hidden');superpowerButtonsContainer.classList.remove('hidden');shopButton.classList.remove('hidden');currentLevel=1;currentLevelDisplay.textContent=currentLevel;score=0;scoreDisplay.textContent=score;INITIAL_OZZY_HEALTH=NORMAL_OZZY_INITIAL_HEALTH;ozzyHealth=INITIAL_OZZY_HEALTH;updateHealthBar();stonksVisualVariantIndex=0;updateOzzyAppearance();clearInterval(superpowerCooldownIntervalId);superpowerCooldownIntervalId=setInterval(updateSuperpowerCooldownDisplays,1000);updateSuperpowerButtons();gameCanvasAnimationFrameId=requestAnimationFrame(animateGameCanvasEffects);gameEffectsCanvas.classList.remove('hidden');gameEffectsCanvas.classList.add('active');playerHealth=MAX_PLAYER_HEALTH;updatePlayerHealthUI();playerHealthContainer.classList.remove('hidden');clearInterval(playerAttackIntervalId);STONKS_ATTACK_DAMAGE=baseStonksDamage;playerAttackIntervalId=setInterval(stonksAttack,STONKS_ATTACK_INTERVAL_MS);if(backgroundMusic){backgroundMusic.play().catch(e=>console.error("Error playing backgroundMusic:",e))}}
function endGame(message){console.log("endGame called with message:",message);isGameActive=!1;ozzyContainer.classList.add('hidden');gameInfoContainer.classList.add('hidden');playerHealthContainer.classList.add('hidden');quoteImagesContainer.innerHTML='';document.querySelectorAll('.knockout-message').forEach(el=>el.remove());document.querySelectorAll('.boss-message').forEach(el=>el.remove());gameContainer.classList.remove('screen-shake');frenzyModeActive=!1;PUNCH_DAMAGE=10+(upgradeLevels.baseDamage-1)*DAMAGE_INCREASE_PER_LEVEL;clearTimeout(frenzyTimerId);frenzyEffect.classList.add('hidden');frenzyEffect.classList.remove('active');freezeModeActive=!1;clearInterval(freezeDotIntervalId);freezeEffect.classList.add('hidden');freezeEffect.classList.remove('active');lightningEffect.classList.add('hidden');lightningEffect.classList.remove('flash-active');punchesSinceLastPowerup=0;lastUsedLightningTime=0;lastUsedFreezeTime=0;lastUsedFrenzyTime=0;updateSuperpowerButtons();clearInterval(superpowerCooldownIntervalId);clearInterval(playerAttackIntervalId);cancelAnimationFrame(bossMovementAnimationFrameId);isBossMovementPaused=!1;cancelAnimationFrame(gameCanvasAnimationFrameId);gameEffectsCanvas.classList.add('hidden');gameEffectsCanvas.classList.remove('active');bossCanvasParticles=[];lightningCanvasParticles=[];freezeCanvasParticles=[];frenzyCanvasParticles=[];scratchCanvasParticles=[];stonksAttackClawParticles=[];stonksAttackPainParticles=[];clawMarks=[];if(gameEffectsCtx){gameEffectsCtx.clearRect(0,0,gameEffectsCanvas.width,gameEffectsCtx.height)}
document.getElementById('end-message').textContent=message;document.getElementById('final-score').textContent=score;saveScoreToLeaderboard(playerNickname,score);endScreen.classList.remove('hidden');if(backgroundMusic){backgroundMusic.pause();backgroundMusic.currentTime=0}
if(gameOverSound){gameOverSound.play().catch(e=>console.error("Error playing gameOverSound:",e))}}
function handleOzzyKnockout(){score++;scoreDisplay.textContent=score;document.querySelectorAll('.knockout-message').forEach(el=>el.remove());document.querySelectorAll('.boss-message').forEach(el=>el.remove());ozzyContainer.classList.add('hidden');playerHealth=MAX_PLAYER_HEALTH;updatePlayerHealthUI();const nextLevelCandidate=currentLevel+1;if(nextLevelCandidate>0&&nextLevelCandidate%BOSS_LEVEL_INTERVAL===0){currentLevel=nextLevelCandidate;currentLevelDisplay.textContent=currentLevel;isBossFight=!0;baseStonksDamage+=STONKS_DAMAGE_INCREMENT_PER_BOSS_CYCLE;console.log(`Bazowe obrażenia Stonksa zwiększone do ${baseStonksDamage} po cyklu bossa.`);startBossFight();clearInterval(playerAttackIntervalId);playerAttackIntervalId=setInterval(stonksAttack,STONKS_ATTACK_INTERVAL_MS)}else{currentLevel=nextLevelCandidate;currentLevelDisplay.textContent=currentLevel;console.log(`Normalny nokaut Stonksa. Nowy poziom: ${currentLevel}`);isBossFight=!1;ozzyImage.src=SKIN_IMAGES[currentSkin].normal;ozzyImage.classList.remove('boss-mode');ozzyImage.classList.remove('flipped-x');if(currentLevel>=1&&currentLevel<=10){stonksVisualVariantIndex=0}else{stonksVisualVariantIndex=Math.floor((currentLevel-1)/BOSS_LEVEL_INTERVAL)%totalStonksVariants}
console.log(`Wariant wizualny Stonksa ustawiony na: stonks-variant-${stonksVisualVariantIndex} dla poziomu ${currentLevel}`);const bossCyclesCompletedForNormalStonks=Math.floor((currentLevel-1)/BOSS_LEVEL_INTERVAL);INITIAL_OZZY_HEALTH=NORMAL_OZZY_INITIAL_HEALTH+(bossCyclesCompletedForNormalStonks*NORMAL_OZZY_HEALTH_INCREMENT);console.log(`HP normalnego Stonksa ustawione na: ${INITIAL_OZZY_HEALTH} (na podstawie ${bossCyclesCompletedForNormalStonks} ukończonych cykli bossów)`);updateOzzyAppearance();bossCurrentTransformX=0;ozzyContainer.style.transform=`translate(-50%, -50%)`;cancelAnimationFrame(bossMovementAnimationFrameId);isBossMovementPaused=!1;const knockoutMsgElement=document.createElement('div');knockoutMsgElement.classList.add('knockout-message');knockoutMsgElement.textContent='+1 to respect!';gameContainer.appendChild(knockoutMsgElement);setTimeout(()=>{knockoutMsgElement.remove()},2000);STONKS_ATTACK_DAMAGE=baseStonksDamage;console.log(`Obrażenia ataku normalnego Stonksa ustawione na: ${STONKS_ATTACK_DAMAGE} dla poziomu ${currentLevel}`)}
ozzyHealth=INITIAL_OZZY_HEALTH;updateHealthBar();setTimeout(()=>{ozzyContainer.classList.remove('hidden');ozzyImage.classList.remove('hit-effect');if(!isBossFight){ozzyContainer.style.transform=`translate(-50%, -50%)`}else{ozzyContainer.style.transform=`translate(calc(-50% + ${bossCurrentTransformX}px), -50%)`}
ozzyImage.classList.add('spawn-ozzy');setTimeout(()=>{ozzyImage.classList.remove('spawn-ozzy')},500);gameCanvasAnimationFrameId=requestAnimationFrame(animateGameCanvasEffects);gameEffectsCanvas.classList.remove('hidden');gameEffectsCanvas.classList.add('active')},200)}
function startBossFight(){ozzyImage.src=SKIN_IMAGES[currentSkin].boss;ozzyImage.classList.add('boss-mode');const bossEncounterCount=currentLevel/BOSS_LEVEL_INTERVAL;INITIAL_OZZY_HEALTH=BOSS_INITIAL_HEALTH+(bossEncounterCount-1)*BOSS_HEALTH_INCREMENT_PER_ENCOUNTER;INITIAL_OZZY_HEALTH=Math.max(BOSS_INITIAL_HEALTH,INITIAL_OZZY_HEALTH);const bossMessageText=currentSkin==='stonks'?"UWAGA! BOSS STONKS! ROZPIERDOL GO!":"UWAGA! BOSS TINU! ROZPIERDOL GO!";showBossMessage(bossMessageText,2500);STONKS_ATTACK_DAMAGE=Math.ceil(baseStonksDamage*1.25);console.log(`BOSS SPAWN! Poziom: ${currentLevel}, Spotkanie: ${bossEncounterCount}, Zdrowie: ${INITIAL_OZZY_HEALTH}, Obrażenia ataku: ${STONKS_ATTACK_DAMAGE}`);bossVisualVariantIndex=(bossEncounterCount-1)%totalBossVariants;updateOzzyAppearance();cancelAnimationFrame(bossMovementAnimationFrameId);isBossMovementPaused=!1;bossCurrentTransformX=0;ozzyContainer.style.transform=`translate(calc(-50% + ${bossCurrentTransformX}px), -50%)`;bossDx=BOSS_MOVEMENT_SPEED*(Math.random()<0.5?1:-1);if(bossDx<0){ozzyImage.classList.add('flipped-x')}else{ozzyImage.classList.remove('flipped-x')}
bossMovementAnimationFrameId=requestAnimationFrame(animateBossMovement);gameCanvasAnimationFrameId=requestAnimationFrame(animateGameCanvasEffects);gameEffectsCanvas.classList.remove('hidden');gameEffectsCanvas.classList.add('active')}
function handlePunch(event){console.log("handlePunch called.");if(!isGameActive){return}
const punchSoundInstance=new Audio('punch.mp3');punchSoundInstance.play().catch(e=>console.error("Error playing punchSoundInstance:",e));punchSoundInstance.onended=()=>{punchSoundInstance.remove()};applyDamageToOzzy(PUNCH_DAMAGE);ozzyImage.classList.add('hit-effect');setTimeout(()=>{ozzyImage.classList.remove('hit-effect')},150);if(!isBossFight&&ozzyHealth>0&&Math.random()<0.3){spawnRandomQuote()}else if(isBossFight&&ozzyHealth>0&&Math.random()<0.4){if(document.querySelectorAll('.knockout-message').length===0&&document.querySelectorAll('.boss-message').length===0){const randomBossQuote=BOSS_QUOTES[Math.floor(Math.random()*BOSS_QUOTES.length)];showBossMessage(randomBossQuote,2000)}}
punchesSinceLastPowerup++;updateSuperpowerButtons()}
function calculateUpgradeCost(currentLevel){return Math.ceil(UPGRADE_COST_BASE*Math.pow(UPGRADE_COST_MULTIPLIER,currentLevel-1))}
function updateUpgradeShopUI(){document.getElementById('current-score-shop').textContent=score;baseDamageLevelDisplay.textContent=upgradeLevels.baseDamage;const nextBaseDamageCost=calculateUpgradeCost(upgradeLevels.baseDamage);baseDamageCostDisplay.textContent=nextBaseDamageCost;buyBaseDamageButton.disabled=score<nextBaseDamageCost;lightningDamageLevelDisplay.textContent=upgradeLevels.lightningDamage;const nextLightningDamageCost=calculateUpgradeCost(upgradeLevels.lightningDamage);lightningDamageCostDisplay.textContent=nextLightningDamageCost;buyLightningDamageButton.disabled=score<nextLightningDamageCost;freezeDamageLevelDisplay.textContent=upgradeLevels.freezeDamage;const nextFreezeDamageCost=calculateUpgradeCost(upgradeLevels.freezeDamage);freezeDamageCostDisplay.textContent=nextFreezeDamageCost;buyFreezeDamageButton.disabled=score<nextFreezeDamageCost;frenzyDamageLevelDisplay.textContent=upgradeLevels.frenzyDamage;const nextFrenzyDamageCost=calculateUpgradeCost(upgradeLevels.frenzyDamage);frenzyDamageCostDisplay.textContent=nextFrenzyDamageCost;buyFrenzyDamageButton.disabled=score<nextFrenzyDamageCost}
function buyUpgrade(upgradeType){let currentLevel=upgradeLevels[upgradeType];const cost=calculateUpgradeCost(currentLevel);if(score>=cost){score-=cost;scoreDisplay.textContent=score;upgradeLevels[upgradeType]++;if(upgradeType==='baseDamage'){PUNCH_DAMAGE=10+(upgradeLevels.baseDamage-1)*DAMAGE_INCREASE_PER_LEVEL;showMessage(`Ulepszono Obrażenia Podstawowe! Nowe obrażenia: ${PUNCH_DAMAGE}`,3000)}else if(upgradeType==='lightningDamage'){const nextLightningDamage=LIGHTNING_BASE_DAMAGE+(upgradeLevels.lightningDamage-1)*LIGHTNING_DAMAGE_INCREASE_PER_LEVEL;showMessage(`Ulepszono Piorun Zagłady! Poziom: ${upgradeLevels.lightningDamage} (Obrażenia: ~${nextLightningDamage})`,3000)}else if(upgradeType==='freezeDamage'){const nextInitialFreezeDamage=ICE_BLAST_INITIAL_DAMAGE+(upgradeLevels.freezeDamage-1)*FREEZE_DAMAGE_INITIAL_INCREASE_PER_LEVEL;const nextDotFreezeDamage=ICE_BLAST_DOT_DAMAGE_PER_SECOND+(upgradeLevels.freezeDamage-1)*FREEZE_DAMAGE_DOT_INCREASE_PER_LEVEL;showMessage(`Ulepszono Lodowy Wybuch! Poziom: ${upgradeLevels.freezeDamage} (Obrażenia: ~${nextInitialFreezeDamage}, DOT: ~${nextDotFreezeDamage}/s)`,3000)}else if(upgradeType==='frenzyDamage'){const nextFrenzyDamage=FRENZY_INITIAL_DAMAGE+(upgradeLevels.frenzyDamage-1)*FRENZY_INITIAL_DAMAGE_INCREASE_PER_LEVEL;showMessage(`Ulepszono Szał Bojowy! Poziom: ${upgradeLevels.frenzyDamage} (Obrażenia: ~${nextFrenzyDamage})`,3000)}
updateUpgradeShopUI()}else{showMessage("Za mało punktów!",3000)}}
function showSkinSelectionScreen(){startScreen.classList.add('hidden');shopButton.classList.add('hidden');superpowerButtonsContainer.classList.add('hidden');ozzyContainer.classList.add('hidden');gameInfoContainer.classList.add('hidden');playerHealthContainer.classList.add('hidden');leaderboardScreen.classList.add('hidden');endScreen.classList.add('hidden');skinSelectionScreen.classList.remove('hidden')}
function hideSkinSelectionScreen(){skinSelectionScreen.classList.add('hidden');startScreen.classList.remove('hidden')}
function selectSkin(skinName){currentSkin=skinName;console.log(`Wybrano skórkę: ${currentSkin}`);ozzyImage.src=SKIN_IMAGES[currentSkin].normal;hideSkinSelectionScreen()}
console.log("Script.js is running!");document.addEventListener('DOMContentLoaded',async()=>{console.log("DOMContentLoaded: DOM has been loaded!");backgroundTractor=document.getElementById('animated-background-tractor');ozzyContainer=document.getElementById('ozzy-container');ozzyImage=document.getElementById('ozzy-image');healthBarFill=document.getElementById('health-bar-fill');gameContainer=document.getElementById('game-container');gameInfoContainer=document.getElementById('game-info-container');scoreDisplay=document.getElementById('score');currentLevelDisplay=document.getElementById('current-level');startScreen=document.getElementById('start-screen');startButton=document.getElementById('start-button');nicknameInput=document.getElementById('nickname-input');showLeaderboardButton=document.getElementById('show-leaderboard-button');endScreen=document.getElementById('end-screen');finalScoreDisplay=document.getElementById('final-score');restartButton=document.getElementById('restart-button');showLeaderboardAfterGameButton=document.getElementById('show-leaderboard-after-game-button');leaderboardScreen=document.getElementById('leaderboard-screen');leaderboardList=document.getElementById('leaderboard-list');backToStartButton=document.getElementById('back-to-start-button');superpowerButtonsContainer=document.getElementById('superpower-buttons-container');btnLightning=document.getElementById('btn-lightning');btnFreeze=document.getElementById('btn-freeze');btnFrenzy=document.getElementById('btn-frenzy');lightningEffect=document.getElementById('lightning-effect');freezeEffect=document.getElementById('freeze-effect');frenzyEffect=document.getElementById('frenzy-effect');backgroundMusic=document.getElementById('background-music');punchSound=document.getElementById('punch-sound');gameOverSound=document.getElementById('game-over-sound');shopButton=document.getElementById('shop-button');upgradeShopScreen=document.getElementById('upgrade-shop-screen');closeShopButton=document.getElementById('close-shop-button');baseDamageLevelDisplay=document.getElementById('base-damage-level');baseDamageCostDisplay=document.getElementById('base-damage-cost');buyBaseDamageButton=document.getElementById('buy-base-damage');lightningDamageLevelDisplay=document.getElementById('lightning-damage-level');lightningDamageCostDisplay=document.getElementById('lightning-damage-cost');buyLightningDamageButton=document.getElementById('buy-lightning-damage');freezeDamageLevelDisplay=document.getElementById('freeze-damage-level');freezeDamageCostDisplay=document.getElementById('freeze-damage-cost');buyFreezeDamageButton=document.getElementById('buy-freeze-damage');frenzyDamageLevelDisplay=document.getElementById('frenzy-damage-level');frenzyDamageCostDisplay=document.getElementById('frenzy-cost');buyFrenzyDamageButton=document.getElementById('buy-frenzy-damage');quoteImagesContainer=document.getElementById('quote-images-container');gameEffectsCanvas=document.getElementById('boss-effect-canvas');gameEffectsCtx=gameEffectsCanvas.getContext('2d');playerHealthContainer=document.getElementById('player-health-container');playerHealthDisplay=document.getElementById('player-health-display');playerHealthBarBg=document.getElementById('player-health-bar-bg');playerHealthBarFill=document.getElementById('player-health-bar-fill');selectSkinButton=document.getElementById('select-skin-button');skinSelectionScreen=document.getElementById('skin-selection-screen');selectStonksSkinButton=document.getElementById('select-stonks-skin');selectTinuSkinButton=document.getElementById('select-tinu-skin');closeSkinSelectionButton=document.getElementById('close-skin-selection-button');upgradeShopScreen.classList.add('hidden');endScreen.classList.add('hidden');leaderboardScreen.classList.add('hidden');ozzyContainer.classList.add('hidden');gameInfoContainer.classList.add('hidden');quoteImagesContainer.innerHTML='';skinSelectionScreen.classList.add('hidden');resetGame();const setCanvasDimensions=()=>{gameEffectsCanvas.width=gameContainer.offsetWidth;gameEffectsCanvas.height=gameContainer.offsetHeight};setCanvasDimensions();window.addEventListener('resize',setCanvasDimensions);clawImage.src='pazury.png';clawImage.onerror=()=>{console.error("Failed to load pazury.png. Please check the image path.")};console.log("Initial game container dimensions:",gameContainer.offsetWidth,gameContainer.offsetHeight);console.log("Initial target image (Ozzy) dimensions:",ozzyImage.offsetWidth,ozzyImage.offsetHeight);try{const userCredential=await signInAnonymously(auth);currentUserId=userCredential.user.uid;console.log("Logged in anonymously. UID:",currentUserId)}catch(error){console.error("Error with anonymous login:",error);showMessage("Błąd połączenia z rankingiem. Spróbuj odświeżyć stronę.",5000)}
console.log("DOMContentLoaded: Authentication completed.");startButton.addEventListener('click',()=>{console.log("START button clicked!");startGame()});showLeaderboardButton.addEventListener('click',()=>{console.log("LEADERBOARD button clicked!");startScreen.classList.add('hidden');shopButton.classList.add('hidden');superpowerButtonsContainer.classList.add('hidden');ozzyContainer.classList.add('hidden');gameInfoContainer.classList.add('hidden');playerHealthContainer.classList.add('hidden');leaderboardScreen.classList.remove('hidden');fetchAndDisplayLeaderboard()});restartButton.addEventListener('click',()=>{console.log("RESTART button clicked!");resetGame()});ozzyContainer.addEventListener('click',handlePunch);ozzyContainer.addEventListener('touchstart',(event)=>{event.preventDefault();handlePunch(event)},{passive:!1});showLeaderboardAfterGameButton.addEventListener('click',()=>{console.log("SHOW LEADERBOARD (after game) button clicked!");endScreen.classList.add('hidden');shopButton.classList.add('hidden');superpowerButtonsContainer.classList.add('hidden');ozzyContainer.classList.add('hidden');gameInfoContainer.classList.add('hidden');playerHealthContainer.classList.add('hidden');leaderboardScreen.classList.remove('hidden');fetchAndDisplayLeaderboard()});backToStartButton.addEventListener('click',()=>{console.log("BACK TO MENU button clicked!");leaderboardScreen.classList.add('hidden');resetGame()});btnLightning.addEventListener('click',activateLightningStrike);btnFreeze.addEventListener('click',activateIceBlast);btnFrenzy.addEventListener('click',activateFrenzy);shopButton.addEventListener('click',()=>{isGameActive=!1;cancelAnimationFrame(bossMovementAnimationFrameId);isBossMovementPaused=!0;clearInterval(superpowerCooldownIntervalId);clearInterval(playerAttackIntervalId);cancelAnimationFrame(gameCanvasAnimationFrameId);gameEffectsCanvas.classList.add('hidden');gameEffectsCanvas.classList.remove('active');bossCanvasParticles=[];lightningCanvasParticles=[];freezeCanvasParticles=[];frenzyCanvasParticles=[];scratchCanvasParticles=[];stonksAttackClawParticles=[];stonksAttackPainParticles=[];clawMarks=[];if(gameEffectsCtx){gameEffectsCtx.clearRect(0,0,gameEffectsCanvas.width,gameEffectsCtx.height)}
lightningEffect.classList.add('hidden');lightningEffect.classList.remove('flash-active');freezeEffect.classList.add('hidden');freezeEffect.classList.remove('active');frenzyEffect.classList.add('hidden');frenzyEffect.classList.remove('active');ozzyContainer.classList.add('hidden');superpowerButtonsContainer.classList.add('hidden');shopButton.classList.add('hidden');gameInfoContainer.classList.add('hidden');playerHealthContainer.classList.add('hidden');upgradeShopScreen.classList.remove('hidden');updateUpgradeShopUI()});closeShopButton.addEventListener('click',()=>{upgradeShopScreen.classList.add('hidden');ozzyContainer.classList.remove('hidden');superpowerButtonsContainer.classList.remove('hidden');shopButton.classList.remove('hidden');gameInfoContainer.classList.remove('hidden');playerHealthContainer.classList.remove('hidden');isGameActive=!0;isBossMovementPaused=!1;if(isBossFight){animateBossMovement()}
gameCanvasAnimationFrameId=requestAnimationFrame(animateGameCanvasEffects);gameEffectsCanvas.classList.remove('hidden');gameEffectsCanvas.classList.add('active');clearInterval(superpowerCooldownIntervalId);superpowerCooldownIntervalId=setInterval(updateSuperpowerCooldownDisplays,1000);updateSuperpowerButtons();clearInterval(playerAttackIntervalId);playerAttackIntervalId=setInterval(stonksAttack,STONKS_ATTACK_INTERVAL_MS);if(freezeModeActive){freezeEffect.classList.remove('hidden');freezeEffect.classList.add('active')}
if(frenzyModeActive){frenzyEffect.classList.remove('hidden');frenzyEffect.classList.add('active')}});buyBaseDamageButton.addEventListener('click',()=>buyUpgrade('baseDamage'));buyLightningDamageButton.addEventListener('click',()=>buyUpgrade('lightningDamage'));buyFreezeDamageButton.addEventListener('click',()=>buyUpgrade('freezeDamage'));buyFrenzyDamageButton.addEventListener('click',()=>buyUpgrade('frenzyDamage'));selectSkinButton.addEventListener('click',showSkinSelectionScreen);selectStonksSkinButton.addEventListener('click',()=>selectSkin('stonks'));selectTinuSkinButton.addEventListener('click',()=>selectSkin('tinu'));closeSkinSelectionButton.addEventListener('click',hideSkinSelectionScreen);updateUpgradeShopUI()})
